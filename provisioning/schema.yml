openapi: 3.0.3
info:
  title: Cloudinary Account Provisioning API
  version: 0.1.5 # x-release-please-version
  description: |
    Accounts with provisioning API access can create and manage their **product environments**, **users** and **user groups** using the RESTful Provisioning API. 

    Provisioning API access is available [upon request](https://cloudinary.com/contact?plan=enterprise) for accounts on an [Enterprise plan](https://cloudinary.com/pricing#pricing-enterprise).

    The API uses **Basic Authentication** over HTTPS. Your **Provisioning Key** and **Provisioning Secret** are used for the authentication. These credentials (as well as your ACCOUNT_ID) are located in the [Cloudinary Console](https://console.cloudinary.com/pm) under **Settings > Account > Provisioning API Access**, or they can be obtained from the provisioning environment variable available on your Cloudinary Console [Dashboard](https://console.cloudinary.com/pm/developer-dashboard).

    The Provisioning API has dedicated SDKs for the following languages:

    * [JavaScript](https://github.com/cloudinary/account-provisioning-js)
    * [PHP](https://github.com/cloudinary/account-provisioning-php)
    * [Java](https://github.com/cloudinary/account-provisioning-java)

    Useful links:
    * [Provisioning API reference (Classic)](https://cloudinary.com/documentation/provisioning_api_1)

  contact:
    name: Cloudinary Support
    email: support@cloudinary.com
    url: https://support.cloudinary.com
  termsOfService: https://cloudinary.com/tou
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  x-cld-module-context: account
  x-cld-module-name: account-provisioning

servers:
  - url: https://api.cloudinary.com/v1_1/provisioning/accounts/{accountId}
    variables:
      accountId:
        default: ACCOUNT_ID
        description: Your Account ID.

tags:
  - name: Product Environments
    description: |
      Manage the product environments (sub-accounts) of your main account.
    externalDocs:
      description: Learn more about product environments management.
      url: https://cloudinary.com/documentation/provisioning_api#product_environments
  - name: Access Keys
    description: |
      Manage the access keys, which include an API key and secret pair, for your product environment (sub-account).
    externalDocs:
      description: Learn more about access keys management.
      url: https://cloudinary.com/documentation/provisioning_api#access_keys
  - name: Users
    description: |
      Manage the users for your account.
    externalDocs:
      description: Learn more about users management.
      url: https://cloudinary.com/documentation/provisioning_api#users
  - name: User Groups
    description: |
      Manage the groups for the users in your account
    externalDocs:
      description: Learn more about user groups management.
      url: https://cloudinary.com/documentation/provisioning_api#user_groups
  - name: Billing Usage
    description: |
      Access billing usage information for your account and product environments.
    externalDocs:
      description: Learn more about billing and usage information.
      url: https://cloudinary.com/documentation/provisioning_api#billing_usage

security:
  - basicAuth: [ ]

paths:
  /sub_accounts:
    get:
      tags:
        - Product Environments
      summary: Get product environments
      description: |
        Return an array of all product environments, or if conditions are specified, 
        return the relevant product environments.
      externalDocs:
        description: Learn more about getting product environments.
        url: https://cloudinary.com/documentation/provisioning_api#get_product_environments
      operationId: getProductEnvironments
      x-cld-use-for-readme: true
      parameters:
        - name: enabled
          in: query
          schema:
            type: boolean
          description: |
            Whether to only return enabled product environments (true) or disabled product environments (false). 
            **Default**: all product environments are returned (both enabled and disabled).
          example: true
        - name: ids
          in: query
          schema:
            type: array
            items:
              type: string
          description: A list of up to 100 product environment IDs. When provided, other parameters are ignored.
        - name: cloud_names
          in: query
          schema:
            type: array
            items:
              type: string
          description: A list of up to 100 product environment cloud names.
        - name: prefix
          in: query
          schema:
            type: string
          description: Returns product environments where the name begins with the specified case-insensitive string.
          example: "product"
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductEnvironmentsResponse"
              examples:
                ProductEnvironments:
                  $ref: "#/components/examples/ProductEnvironments"
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403NotAllowed'
        '404':
          $ref: '#/components/responses/404NotFound'
        '409':
          $ref: '#/components/responses/409AlreadyExists'
        '420':
          $ref: '#/components/responses/420MaxUsageRateExceeded'
        '429':
          $ref: '#/components/responses/429TooManyRequests'

    post:
      tags:
        - Product Environments
      summary: Create product environment
      description: |
        Create a new product environment. Any users that have access to all product environments will also automatically
        have access to the new product environment.
      externalDocs:
        description: Learn more about creating product environments.
        url: https://cloudinary.com/documentation/provisioning_api#create_product_environment
      operationId: createProductEnvironment
      requestBody:
        required: true
        description: Product environment details
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductEnvironmentRequest"
      responses:
        '200':
          description: Product environment created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductEnvironment"
              examples:
                ProductEnvironment3:
                  $ref: '#/components/examples/ProductEnvironment3'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403NotAllowed'
        '409':
          $ref: '#/components/responses/409AlreadyExists'
        '420':
          $ref: '#/components/responses/420MaxUsageRateExceeded'
        '429':
          $ref: '#/components/responses/429TooManyRequests'

  /sub_accounts/{sub_account_id}:
    parameters:
      - $ref: '#/components/parameters/subAccountId'

    get:
      tags:
        - Product Environments
      summary: Get product environment
      description: Retrieve a specific product environment.
      externalDocs:
        description: Learn more about retrieving specific product environments.
        url: https://cloudinary.com/documentation/provisioning_api#get_product_environment
      operationId: getProductEnvironment
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductEnvironment"
              examples:
                ProductEnvironment1:
                  $ref: '#/components/examples/ProductEnvironment1'
                ProductEnvironment2:
                  $ref: '#/components/examples/ProductEnvironment2'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '404':
          $ref: '#/components/responses/404NotFound'
        '420':
          $ref: '#/components/responses/420MaxUsageRateExceeded'
        '429':
          $ref: '#/components/responses/429TooManyRequests'

    put:
      tags:
        - Product Environments
      summary: Update product environment
      description: Update the details of a product environment.
      externalDocs:
        description: Learn more about updating product environments.
        url: https://cloudinary.com/documentation/provisioning_api#update_product_environment
      operationId: updateProductEnvironment
      requestBody:
        required: true
        description: Updated product environment details
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductEnvironmentUpdateRequest"
      responses:
        '200':
          description: Product environment updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductEnvironment"
              examples:
                ProductEnvironment1:
                  $ref: '#/components/examples/ProductEnvironment1'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403NotAllowed'
        '404':
          $ref: '#/components/responses/404NotFound'
        '409':
          $ref: '#/components/responses/409AlreadyExists'
        '420':
          $ref: '#/components/responses/420MaxUsageRateExceeded'
        '429':
          $ref: '#/components/responses/429TooManyRequests'
    delete:
      tags:
        - Product Environments
      summary: Delete product environment
      description: Delete a specific product environment.
      externalDocs:
        description: Learn more about deleting product environments.
        url: https://cloudinary.com/documentation/provisioning_api#delete_product_environment
      operationId: deleteProductEnvironment
      responses:
        '200':
          description: Product environment deleted successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403NotAllowed'
        '404':
          $ref: '#/components/responses/404NotFound'
        '420':
          $ref: '#/components/responses/420MaxUsageRateExceeded'
        '429':
          $ref: '#/components/responses/429TooManyRequests'

  /sub_accounts/{sub_account_id}/access_keys:
    parameters:
      - $ref: '#/components/parameters/subAccountId'

    get:
      tags:
        - Access Keys
      summary: Get access keys
      description: Retrieve an array of all access keys for a product environment.
      externalDocs:
        description: Learn more about retrieving access keys.
        url: https://cloudinary.com/documentation/provisioning_api#get_access_keys
      operationId: getAccessKeys
      parameters:
        - name: page_size
          in: query
          schema:
            type: integer
          description: How many entries to display on each page.
        - name: page
          in: query
          schema:
            type: integer
            maximum: 100
          description: |
            Which page to return (maximum pages 100). **Default**: All pages are returned.
        - name: sort_by
          in: query
          schema:
            type: string
            enum:
              - api_key
              - created_at
              - name
              - enabled
          description: |
            Which response parameter to sort by. **Possible values**: `api_key`, `created_at`, `name`, `enabled`.
          example: created_at
        - name: sort_order
          in: query
          schema:
            type: string
            enum:
              - desc
              - asc
          description: |
            Control the order of returned keys. **Possible values**: `desc` (default), `asc`.
          example: asc
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessKeysResponse"
              examples:
                AccessKeys:
                  $ref: "#/components/examples/AccessKeys"
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '404':
          $ref: '#/components/responses/404NotFound'
        '420':
          $ref: '#/components/responses/420MaxUsageRateExceeded'
        '429':
          $ref: '#/components/responses/429TooManyRequests'
    post:
      tags:
        - Access Keys
      summary: Generate an access key
      description: Generate a new access key.
      externalDocs:
        description: Learn more about generating access keys.
        url: https://cloudinary.com/documentation/provisioning_api#generate_an_access_key
      operationId: generateAccessKey
      requestBody:
        required: true
        description: Access key details
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccessKeyRequest"
      responses:
        '200':
          description: Access key created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessKey"
              examples:
                MainAccessKey:
                  $ref: "#/components/examples/MainAccessKey"
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403NotAllowed'
        '404':
          $ref: '#/components/responses/404NotFound'
        '409':
          $ref: '#/components/responses/409AlreadyExists'
        '420':
          $ref: '#/components/responses/420MaxUsageRateExceeded'
        '429':
          $ref: '#/components/responses/429TooManyRequests'

    delete:
      tags:
        - Access Keys
      summary: Delete access key by name
      description: Delete a specific access key by name.
      externalDocs:
        description: Learn more about deleting access keys.
        url: https://cloudinary.com/documentation/provisioning_api#delete_an_access_key
      operationId: deleteAccessKeyByName
      parameters:
        - name: name
          description: The access key name.
          in: query
          required: true
          schema:
            type: string
          example:
            "main_key"
      responses:
        '200':
          description: Access Key deleted successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403NotAllowed'
        '404':
          $ref: '#/components/responses/404NotFound'
        '420':
          $ref: '#/components/responses/420MaxUsageRateExceeded'
        '429':
          $ref: '#/components/responses/429TooManyRequests'

  /sub_accounts/{sub_account_id}/access_keys/{key}:
    parameters:
      - $ref: '#/components/parameters/subAccountId'
      - $ref: '#/components/parameters/accessKey'

    put:
      tags:
        - Access Keys
      summary: Update an access key
      description: Update the name and/or status of an existing access key.
      externalDocs:
        description: Learn more about updating access keys.
        url: https://cloudinary.com/documentation/provisioning_api#update_an_access_key
      operationId: updateAccessKey
      requestBody:
        required: true
        description: Access key details for update
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccessKeyUpdateRequest"
      responses:
        '200':
          description: Access key updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessKey"
              examples:
                MainAccessKey:
                  $ref: "#/components/examples/MainAccessKey"
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403NotAllowed'
        '404':
          $ref: '#/components/responses/404NotFound'
        '409':
          $ref: '#/components/responses/409AlreadyExists'
        '420':
          $ref: '#/components/responses/420MaxUsageRateExceeded'
        '429':
          $ref: '#/components/responses/429TooManyRequests'
    delete:
      tags:
        - Access Keys
      summary: Delete access key
      description: Delete a specific access key.
      externalDocs:
        description: Learn more about deleting access keys.
        url: https://cloudinary.com/documentation/provisioning_api#delete_an_access_key
      operationId: deleteAccessKey
      responses:
        '200':
          description: Access Key deleted successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403NotAllowed'
        '404':
          $ref: '#/components/responses/404NotFound'
        '420':
          $ref: '#/components/responses/420MaxUsageRateExceeded'
        '429':
          $ref: '#/components/responses/429TooManyRequests'

  /users:
    get:
      summary: Get users
      description: |
        Returns an array of all users in the account, or if conditions are specified, returns the relevant users.
      externalDocs:
        description: Learn more about retrieving users.
        url: https://cloudinary.com/documentation/provisioning_api#get_users
      operationId: getUsers
      tags:
        - Users
      parameters:
        - name: pending
          in: query
          schema:
            type: boolean
          description: |
            Whether to return pending users. **Default**: `false` (all users)
          example: false
        - name: ids
          in: query
          schema:
            type: array
            items:
              type: string
            maxItems: 100
          description: A list of up to 100 user IDs.  When provided, other parameters are ignored.
        - name: emails
          in: query
          schema:
            type: array
            items:
              type: string
            maxItems: 100
          description: A list of up to 100 user Emails.  When provided, other parameters are ignored.
        - name: prefix
          in: query
          schema:
            type: string
          description: Returns users where the name begins with the specified case-insensitive string.
          example: 'john'
        - name: sub_account_id
          in: query
          schema:
            type: string
          description: Only returns users who have access to the specified account.
        - name: last_login
          in: query
          description: Specifies a date range for last login.
          schema:
            type: boolean
        - name: from
          in: query
          description: |
            All last logins after this date, given in the format: yyyy-mm-dd.
          schema:
            type: string
            format: date
          example: 2023-01-01
        - name: to
          in: query
          description: |
            All last logins before this date, given in the format: yyyy-mm-dd.
          schema:
            type: string
            format: date
          example: 2024-12-31
        - name: union_type
          in: query
          description: |
            Whether to return users who last logged in within the specified date range (include) or those who didn't
            last log in within the range (exclude). **Possible values**: `include`, `exclude`. **Default**: `include`.
          schema:
            type: string
            enum:
              - include
              - exclude
        - name: sort_order
          in: query
          schema:
            type: string
            enum:
              - desc
              - asc
          description: |
            Control the order of returned users. **Possible values**: `desc` (default), `asc`.
        - name: sort_by
          in: query
          schema:
            type: string
            enum:
              - name
              - role
              - status
              - activity
              - created_at
        - name: page
          in: query
          schema:
            type: "integer"
        - name: page_size
          in: query
          schema:
            type: "integer"
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UsersResponse"
              examples:
                Users:
                  $ref: "#/components/examples/Users"
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '404':
          $ref: '#/components/responses/404NotFound'
        '420':
          $ref: '#/components/responses/420MaxUsageRateExceeded'
        '429':
          $ref: '#/components/responses/429TooManyRequests'

    post:
      summary: Create user
      description: Create a new user.
      externalDocs:
        description: Learn more about creating users.
        url: https://cloudinary.com/documentation/provisioning_api#create_user
      operationId: createUser
      tags:
        - Users
      requestBody:
        required: true
        description: User details
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/UserRequest"
              required:
                - name
                - email
      responses:
        '200':
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
              examples:
                UserJohn:
                  $ref: "#/components/examples/UserJohn"
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403NotAllowed'
        '404':
          $ref: '#/components/responses/404NotFound'
        '409':
          $ref: '#/components/responses/409AlreadyExists'
        '420':
          $ref: '#/components/responses/420MaxUsageRateExceeded'
        '429':
          $ref: '#/components/responses/429TooManyRequests'

  /users/{user_id}:
    parameters:
      - $ref: '#/components/parameters/userId'

    get:
      summary: Get user
      description: Retrieve a specific user.
      externalDocs:
        description: Learn more about retrieving a specific user.
        url: https://cloudinary.com/documentation/provisioning_api#get_user
      operationId: getUser
      tags:
        - Users
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
              examples:
                UserFooBar:
                  $ref: "#/components/examples/UserFooBar"
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '404':
          $ref: '#/components/responses/404NotFound'
        '420':
          $ref: '#/components/responses/420MaxUsageRateExceeded'
        '429':
          $ref: '#/components/responses/429TooManyRequests'

    put:
      summary: Update user
      description: Update the details of a user.
      externalDocs:
        description: Learn more about updating a specific user.
        url: https://cloudinary.com/documentation/provisioning_api#update_user
      operationId: updateUser
      tags:
        - Users
      requestBody:
        required: true
        description: Updated user details
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserRequest"
      responses:
        '200':
          description: User updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
              examples:
                UserJohn:
                  $ref: "#/components/examples/UserJohn"

        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403NotAllowed'
        '404':
          $ref: '#/components/responses/404NotFound'
        '409':
          $ref: '#/components/responses/409AlreadyExists'
        '420':
          $ref: '#/components/responses/420MaxUsageRateExceeded'
        '429':
          $ref: '#/components/responses/429TooManyRequests'

    delete:
      summary: Delete user
      description: Delete a specific user.
      externalDocs:
        description: Learn more about deleting a specific user.
        url: https://cloudinary.com/documentation/provisioning_api#delete_user
      operationId: deleteUser
      tags:
        - Users
      responses:
        '200':
          description: User deleted successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403NotAllowed'
        '404':
          $ref: '#/components/responses/404NotFound'
        '420':
          $ref: '#/components/responses/420MaxUsageRateExceeded'
        '429':
          $ref: '#/components/responses/429TooManyRequests'

  /user_groups:
    get:
      parameters:
        - $ref: '#/components/parameters/userGroupExtendedDetails'
      summary: Get User Groups
      description: Retrieve an array of all user groups in the account.
      externalDocs:
        description: Learn more about retrieving user groups.
        url: https://cloudinary.com/documentation/provisioning_api#get_user_groups
      operationId: getUserGroups
      tags:
        - User Groups
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroupsResponse'
              examples:
                UserGroups:
                  $ref: "#/components/examples/UserGroups"
                UserGroupsExtendedDetails:
                  $ref: "#/components/examples/UserGroupsExtendedDetails"
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '404':
          $ref: '#/components/responses/404NotFound'
        '420':
          $ref: '#/components/responses/420MaxUsageRateExceeded'
        '429':
          $ref: '#/components/responses/429TooManyRequests'

    post:
      summary: Create User Group
      description: Create a new user group for the account.
      externalDocs:
        description: Learn more about creating user groups.
        url: https://cloudinary.com/documentation/provisioning_api#create_user_group
      operationId: createUserGroup
      tags:
        - User Groups
      requestBody:
        required: true
        description: User group details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserGroupRequest'
      responses:
        '200':
          description: User group created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroup'
              examples:
                UserGroupDesigners:
                  $ref: "#/components/examples/UserGroupDesigners"
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403NotAllowed'
        '404':
          $ref: '#/components/responses/404NotFound'
        '409':
          $ref: '#/components/responses/409AlreadyExists'
        '420':
          $ref: '#/components/responses/420MaxUsageRateExceeded'
        '429':
          $ref: '#/components/responses/429TooManyRequests'

  /user_groups/{group_id}:
    parameters:
      - $ref: '#/components/parameters/userGroupId'

    get:
      parameters:
        - $ref: '#/components/parameters/userGroupExtendedDetails'
      summary: Get User Group
      description: Retrieve a specific user group.
      externalDocs:
        description: Learn more about retrieving a specific user group.
        url: https://cloudinary.com/documentation/provisioning_api#get_user_group
      operationId: getUserGroup
      tags:
        - User Groups
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroup'
              examples:
                UserGroupDesigners:
                  $ref: "#/components/examples/UserGroupDesigners"
                UserGroupDesignersExtendedDetails:
                  $ref: "#/components/examples/UserGroupDesignersExtendedDetails"
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '404':
          $ref: '#/components/responses/404NotFound'
        '420':
          $ref: '#/components/responses/420MaxUsageRateExceeded'
        '429':
          $ref: '#/components/responses/429TooManyRequests'

    put:
      summary: Update User Group
      description: Update the name of a specified user group.
      externalDocs:
        description: Learn more about updating a specific user group.
        url: https://cloudinary.com/documentation/provisioning_api#update_user_group
      operationId: updateUserGroup
      tags:
        - User Groups
      requestBody:
        required: true
        description: Updated user group details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserGroupRequest'
            examples:
              UserGroupDesignersRequest:
                $ref: "#/components/examples/UserGroupDesignersRequest"
      responses:
        '200':
          description: User group updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroup'
              examples:
                UserGroupUpdate:
                  $ref: "#/components/examples/UserGroupUpdate"
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403NotAllowed'
        '404':
          $ref: '#/components/responses/404NotFound'
        '409':
          $ref: '#/components/responses/409AlreadyExists'
        '420':
          $ref: '#/components/responses/420MaxUsageRateExceeded'
        '429':
          $ref: '#/components/responses/429TooManyRequests'

    delete:
      summary: Delete User Group
      description: Delete a user group with the specified ID.
      externalDocs:
        description: Learn more about deleting a specific user group.
        url: https://cloudinary.com/documentation/provisioning_api#delete_user_group
      operationId: deleteUserGroup
      tags:
        - User Groups
      responses:
        '200':
          description: User group deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403NotAllowed'
        '404':
          $ref: '#/components/responses/404NotFound'
        '420':
          $ref: '#/components/responses/420MaxUsageRateExceeded'
        '429':
          $ref: '#/components/responses/429TooManyRequests'

  /user_groups/{group_id}/users:
    parameters:
      - $ref: '#/components/parameters/userGroupId'

    get:
      summary: Get Users in User Group
      description: Retrieve the users in the group with the specified ID.
      externalDocs:
        description: Learn more about retrieving users in a specific user group.
        url: https://cloudinary.com/documentation/provisioning_api#get_user_group_users
      operationId: getUsersInUserGroup
      tags:
        - User Groups
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroupUsersResponse'
              examples:
                UserGroupUsers:
                  $ref: "#/components/examples/UserGroupUsers"
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '404':
          $ref: '#/components/responses/404NotFound'
        '420':
          $ref: '#/components/responses/420MaxUsageRateExceeded'
        '429':
          $ref: '#/components/responses/429TooManyRequests'


  /user_groups/{group_id}/users/{user_id}:
    parameters:
      - $ref: '#/components/parameters/userGroupId'
      - $ref: '#/components/parameters/userId'

    post:
      summary: Add User to User Group
      description: Add a user to a group with the specified ID.
      externalDocs:
        description: Learn more about adding users to a specific user group.
        url: https://cloudinary.com/documentation/provisioning_api#add_user_to_group
      operationId: addUserToUserGroup
      tags:
        - User Groups
      responses:
        '200':
          description: User added to group successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroupUser'
              examples:
                UserGroupUserJohn:
                  $ref: "#/components/examples/UserGroupUserJohn"
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403NotAllowed'
        '404':
          $ref: '#/components/responses/404NotFound'
        '409':
          $ref: '#/components/responses/409AlreadyExists'
        '420':
          $ref: '#/components/responses/420MaxUsageRateExceeded'
        '429':
          $ref: '#/components/responses/429TooManyRequests'

    delete:
      summary: Remove User from User Group
      description: Remove a user from a group with the specified ID.
      externalDocs:
        description: Learn more about removing users from a specific user group.
        url: https://cloudinary.com/documentation/provisioning_api#remove_user_from_group
      operationId: removeUserFromUserGroup
      tags:
        - User Groups
      responses:
        '200':
          description: User removed from group successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroupUsersResponse'
              examples:
                UserGroupUsers:
                  $ref: "#/components/examples/UserGroupUsersNoJohn"
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403NotAllowed'
        '404':
          $ref: '#/components/responses/404NotFound'
        '420':
          $ref: '#/components/responses/420MaxUsageRateExceeded'
        '429':
          $ref: '#/components/responses/429TooManyRequests'

  /billing_usage:
    get:
      tags:
        - Billing Usage
      summary: Get billing usage information
      description: |
        Retrieve billing usage metrics for your account and product environments, 
        including storage, bandwidth, requests, and transformations.

        If `year` is provided:
          - **Annual subscription**: Returns the single annual usage cycle that began in the specified year (if any).
          - **Monthly subscription**: Returns all monthly usage cycles that began in the specified year.

        If `year` is not provided:
          - Returns usage for the year in which the current active subscription period began.
          - If no active subscription exists, an empty list is returned.
      operationId: getBillingUsage
      parameters:
        - name: year
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 2000
            maximum: 2100
          description: The year to retrieve billing usage for. Behavior depends on subscription type (see above).
          example: 2024
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BillingUsageResponse"
              examples:
                ProPAYG:
                  $ref: "#/components/examples/BillingUsageResponse_ProPAYG"
                AdvancedExtraPAYG:
                  $ref: "#/components/examples/BillingUsageResponse_AdvancedExtraPAYG"
                AdvancedPAYG:
                  $ref: "#/components/examples/BillingUsageResponse_AdvancedPAYG"
                ProPAYGPlus:
                  $ref: "#/components/examples/BillingUsageResponse_ProPAYGPlus"
                MultiPlan:
                  $ref: "#/components/examples/BillingUsageResponse_MultiPlan"
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403NotAllowed'
        '404':
          $ref: '#/components/responses/404NotFound'
        '429':
          $ref: '#/components/responses/429TooManyRequests'

components:
  schemas:
    ProductEnvironmentRequest:
      type: object
      properties:
        name:
          type: string
          description: The display name for the product environment.
          example: Product3 Application
        cloud_name:
          type: string
          description: The Cloudinary cloud name (optional, default is auto-generated).
          example: product3
        base_sub_account_id:
          type: string
          description: The ID of another product environment to copy settings from (optional).
          example: 0aaaaa1bbbbb2ccccc3ddddd4eeeee5f
        custom_attributes:
          type: object
          description: Custom attributes associated with the product environment (optional).
      required:
        - name

    ProductEnvironmentUpdateRequest:
      type: object
      properties:
        name:
          type: string
          description: The display name for the product environment.
          example: Product3 Application
        cloud_name:
          type: string
          description: |
            The Cloudinary cloud name. An error is returned if the requested name already exists.
            **Note**: Can only be changed for accounts with fewer than 1000 images.
          example: product3
        custom_attributes:
          type: object
          description: Custom attributes associated with the product environment.
        enabled:
          type: boolean
          description: |
            Whether the product environment is enabled. **Default**: true.

    ProductEnvironmentsResponse:
      type: object
      properties:
        sub_accounts:
          type: array
          items:
            $ref: "#/components/schemas/ProductEnvironment"

    ProductEnvironment:
      description: Product Environment
      type: object
      properties:
        cloud_name:
          type: string
        name:
          type: string
          description: The cloud name of the product environment.
        enabled:
          type: boolean
          description: Whether the product environment is enabled or disabled.
        id:
          type: string
          description: The ID of the product environment.
        api_access_keys:
          type: array
          description: The list of the product environment's access keys.
          items:
            $ref: "#/components/schemas/ApiAccessKey"
        created_at:
          type: string
          format: date-time
          description: The date when the product environment was created.
        updated_at:
          type: string
          format: date-time
          description: The date when the product environment was last updated.

    AccessKeyRequest:
      type: object
      properties:
        name:
          type: string
          description: The name of the access key.
          example: "main_key"
        enabled:
          type: boolean
          description: Whether the access key is enabled or disabled.
          example: true

    AccessKeyUpdateRequest:
      type: object
      properties:
        name:
          type: string
          description: The name of the access key.
          example: "main_key"
        enabled:
          type: boolean
          description: Whether the access key is enabled or disabled.
          example: true
        dedicated_for:
          type: string
          enum:
            - webhooks
          description: |
            Designates the access key for a specific purpose while allowing it to be used for other purposes, as well. 
            This action replaces any previously assigned key. **Possible values**: `webhooks`
          example: "webhooks"

    AccessKeysResponse:
      type: object
      properties:
        access_keys:
          type: array
          description: The list of the access keys.
          items:
            $ref: "#/components/schemas/AccessKey"
        total:
          type: integer
          description: Total number of the access keys.

    AccessKey:
      type: object
      properties:
        name:
          type: string
          description: The name of the access key.
        api_key:
          type: string
          description: The API key.
        api_secret:
          type: string
          format: password
          description: The API secret.
        created_at:
          type: string
          format: date-time
          description: The date when the access key was created.
        updated_at:
          type: string
          format: date-time
          description: The date when the access key was last updated.
        enabled:
          type: boolean
          description: Whether the access key is enabled or disabled.

    ApiAccessKey:
      description: Brief details of a single API Access Key.
      type: object
      properties:
        key:
          type: string
          description: The API key.
        secret:
          type: string
          format: password
          description: The API secret.
        enabled:
          type: boolean
          description: Whether the access key is enabled or disabled.

    UserRequest:
      type: object
      properties:
        name:
          type: string
          format: email
          description: The user's name.
          example: John
        email:
          type: string
          description: A unique email address, which serves as the login name and notification address.
          example: john@example.com
        role:
          type: string
          description: The role to assign.
          enum:
            - master_admin
            - admin
            - billing
            - technical_admin
            - reports
            - media_library_admin
            - media_library_user
          example: technical_admin
        sub_account_ids:
          type: array
          description: |
            A list of product environment IDs that this user can access. Ignored if the role is `master_admin`. 
            **Default**: all product environments.
          items:
            type: string
        enabled:
          type: boolean
          description: |
            Whether the user is enabled. **Default**: true.
          example: true

    UsersResponse:
      type: object
      properties:
        users:
          type: array
          items:
            $ref: "#/components/schemas/User"

    User:
      description: User details.
      type: object
      properties:
        id:
          type: string
          description: The user's ID.
        name:
          type: string
          description: The user's name.
        role:
          type: string
          description: The user's role.
        email:
          type: string
          format: email
          description: The user's email.
        pending:
          type: boolean
          description: Whether the user is pending.
        enabled:
          type: boolean
          description: Whether the user is enabled.
        created_at:
          type: string
          format: date-time
          description: The date when the user was created.
        updated_at:
          type: string
          format: date-time
          description: The date when the user was last updated.
        last_login:
          type: string
          format: date-time
          description: The date when the user was last logged in.
        all_sub_accounts:
          type: boolean
        groups:
          type: array
          items:
            $ref: '#/components/schemas/UserGroupSummary'
          description: The list of user groups.
        sub_account_ids:
          type: string
          description: The list of the product environments IDs.

    UserGroupRequest:
      type: object
      properties:
        name:
          description: The user group's name.
          type: string
          example: Designers
        extended_details:
          type: boolean
          description: |
            Whether to only return extended (true) or basic information about the group (false). 
            **Default**: false.
          example: false

    UserGroupsResponse:
      type: object
      properties:
        user_groups:
          description: A list of user groups.
          type: array
          items:
            $ref: '#/components/schemas/UserGroup'

    UserGroupUsersResponse:
      type: object
      properties:
        users:
          description: A list of user group users.
          type: array
          items:
            $ref: '#/components/schemas/UserGroupUser'

    UserGroupSummary:
      description: User group summary.
      type: object
      properties:
        id:
          type: string
          description: The user group's ID.
        name:
          type: string
          description: The user group's name.

    UserGroup:
      description: User group.
      type: object
      properties:
        id:
          type: string
          description: The user group's ID.
        name:
          type: string
          description: The user group's name.
        users:
          type: array
          description: |
            A list of user group users.
            Only returned in extended_details.
          items:
            $ref: '#/components/schemas/UserGroupUser'
        created_at:
          type: string
          format: date-time
          description: |
            The date when the user group was created.
            Only returned in extended_details.
        updated_at:
          type: string
          format: date-time
          description: |
            The date when the user group was last updated.
            Only returned in extended_details.

    UserGroupUser:
      type: object
      description: User group user.
      properties:
        id:
          type: string
          description: The user's ID.
        name:
          type: string
          description: The user's name.
        email:
          type: string
          format: email
          description: The user's email.

    SuccessResponse:
      type: object
      properties:
        message:
          type: string
          example: "ok"

    ErrorResponse:
      type: object
      properties:
        error:
          type: object
          properties:
            message:
              type: string
              example: "error"

    BillingUsageResponse:
      type: array
      items:
        type: object
        properties:
          plan_name:
            type: string
            description: The name of the plan (e.g., "Pro PAYG", "Advanced PAYG").
          metric_usage:
            type: array
            items:
              type: object
              properties:
                metric:
                  type: string
                  description: The type of metric being measured (e.g., "credit").
                limit:
                  type: number
                  description: The limit for this metric in the plan.
                cycles:
                  type: array
                  items:
                    type: object
                    properties:
                      from_day:
                        type: string
                        format: date
                        description: The start date of the billing cycle.
                        example: "2024-08-21"
                      to_day:
                        type: string
                        format: date
                        description: The end date of the billing cycle.
                        example: "2024-09-20"
                      usage:
                        type: number
                        description: Total usage for this cycle.
                        example: 25641.55
                      breakdown:
                        type: object
                        description: Usage breakdown by asset type and operation.
                        properties:
                          storage_image:
                            type: number
                            description: Storage usage for images.
                          storage_video:
                            type: number
                            description: Storage usage for videos.
                          storage_raw:
                            type: number
                            description: Storage usage for raw files.
                          transformations_image:
                            type: number
                            description: Transformation usage for images.
                          transformations_video:
                            type: number
                            description: Transformation usage for videos.
                          bandwidth_image:
                            type: number
                            description: Bandwidth usage for images.
                          bandwidth_video:
                            type: number
                            description: Bandwidth usage for videos.
                          bandwidth_raw:
                            type: number
                            description: Bandwidth usage for raw files.
                          image_impressions:
                            type: number
                            description: Number of times images were delivered (impressions).
                          video_seconds:
                            type: number
                            description: Video delivery usage measured in billing seconds (actual viewed duration multiplied by a resolution-based ratio).
                        additionalProperties: false
                      product_environment_breakdown:
                        type: array
                        description: Optional breakdown by product environment. May not be present in all responses.
                        items:
                          $ref: '#/components/schemas/CloudAssetTypeBreakdown'
                monthly_cycles:
                  type: array
                  items:
                    type: object
                    properties:
                      from_day:
                        type: string
                        format: date
                        description: The start date of the monthly billing cycle.
                      to_day:
                        type: string
                        format: date
                        description: The end date of the monthly billing cycle.
                      usage:
                        type: number
                        description: Total usage for this monthly cycle.
                      breakdown:
                        type: object
                        description: Usage breakdown by asset type and operation for the monthly cycle.
                        properties:
                          storage_image:
                            type: number
                            description: Storage usage for images.
                          storage_video:
                            type: number
                            description: Storage usage for videos.
                          storage_raw:
                            type: number
                            description: Storage usage for raw files.
                          transformations_image:
                            type: number
                            description: Transformation usage for images.
                          transformations_video:
                            type: number
                            description: Transformation usage for videos.
                          bandwidth_image:
                            type: number
                            description: Bandwidth usage for images.
                          bandwidth_video:
                            type: number
                            description: Bandwidth usage for videos.
                          bandwidth_raw:
                            type: number
                            description: Bandwidth usage for raw files.
                          image_impressions:
                            type: number
                            description: Number of times images were delivered (impressions).
                          video_seconds:
                            type: number
                            description: Video delivery usage measured in billing seconds (actual viewed duration multiplied by a resolution-based ratio).
                        additionalProperties: false
                      product_environment_breakdown:
                        type: array
                        description: Optional breakdown by product environment for the monthly cycle. May not be present in all responses.
                        items:
                          $ref: '#/components/schemas/CloudAssetTypeBreakdown'

    CloudAssetTypeBreakdown:
      type: object
      properties:
        storage_image:
          type: number
          description: Storage usage for images in this product environment.
        storage_video:
          type: number
          description: Storage usage for videos in this product environment.
        storage_raw:
          type: number
          description: Storage usage for raw files in this product environment.
        transformations_image:
          type: number
          description: Transformation usage for images in this product environment.
        transformations_video:
          type: number
          description: Transformation usage for videos in this product environment.
        bandwidth_image:
          type: number
          description: Bandwidth usage for images in this product environment.
        bandwidth_video:
          type: number
          description: Bandwidth usage for videos in this product environment.
        bandwidth_raw:
          type: number
          description: Bandwidth usage for raw files in this product environment.
        image_impressions:
          type: number
          description: Number of times images were delivered (impressions) in this product environment.
        video_seconds:
          type: number
          description: Video delivery usage measured in billing seconds (actual viewed duration multiplied by a resolution-based ratio).
        cloud_name:
          type: string
          description: The name of the product environment.

  securitySchemes:
    basicAuth:
      type: http
      scheme: basic

  parameters:
    subAccountId:
      name: sub_account_id
      description: The ID of the product environment.
      in: path
      required: true
      schema:
        type: string
      example:
        "abcde1fghij2klmno3pqrst4uvwxy5z"

    accessKey:
      name: key
      description: The access key (api key).
      in: path
      required: true
      schema:
        type: string
      example:
        "814814814814814"

    userId:
      name: user_id
      in: path
      description: The ID of the user.
      required: true
      schema:
        type: string
      example: "0abed8dfcc039ea05e2a1d494fd442"

    userGroupId:
      name: group_id
      description: The ID of the user group.
      in: path
      required: true
      schema:
        type: string
      example: "7f08f1f1fc910bf1f25274aef11d27"
    userGroupExtendedDetails:
      in: query
      name: extended_details
      schema:
        type: boolean
      description: |
        Whether to only return extended (true) or basic information about the group (false). 
        **Default**: false.
      example: true

  responses:
    400BadRequest:
      description: Bad request.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"

    401Unauthorized:
      description: Authorization required.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
          example:
            error:
              message: "Invalid credentials"

    403NotAllowed:
      description: Not allowed.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"

    404NotFound:
      description: Not found.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
          example:
            error:
              message: "not found"

    409AlreadyExists:
      description: Already exists.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"

    420MaxUsageRateExceeded:
      description: Max usage rate exceeded.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
            
    429TooManyRequests:
      description: Too Many Requests.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"

  examples:
    ProductEnvironment1:
      summary: Product environment sample response 1
      value:
        cloud_name: "product1"
        name: "Product1 Application"
        enabled: true
        id: "abcde1fghij2klmno3pqrst4uvwxy5z"
        api_access_keys:
          - key: "123456789012345"
            secret: "asdf1JKL2xyz3ABc4s3c5reT01DfaKez"
            enabled: true
        created_at: "2016-09-27T08:00:16Z"
        updated_at: "2016-09-27T08:00:16Z"

    ProductEnvironment2:
      summary: Product environment sample response 2
      value:
        cloud_name: "product2"
        name: "Product2 Application"
        enabled: true
        id: "0aaaaa1bbbbb2ccccc3ddddd4eeeee5f"
        api_access_keys:
          - key: "543210987654321"
            secret: "T415i5mYs3cr3TkeYN0tR3a77y0o0"
            enabled: true
        created_at: "2016-03-15T11:44:48Z"
        updated_at: "2016-03-15T11:44:48Z"

    ProductEnvironment3:
      summary: Product environment sample response 3
      value:
        cloud_name: "product3"
        name: "Product3 Application"
        enabled: false
        id: "555asdf0000zxcvb3456qwerty"
        api_access_keys:
          - key: "135792468054321"
            secret: "w4aTi5Y0u6k3YN0773lL1nGyUt0Da8"
            enabled: true
        created_at: "2016-09-27T11:15:35Z"
        updated_at: "2016-09-27T11:15:35Z"

    ProductEnvironments:
      summary: Get product environments sample response
      value:
        sub_accounts:
          - cloud_name: "product1"
            name: "Product1 Application"
            enabled: true
            id: "abcde1fghij2klmno3pqrst4uvwxy5z"
            api_access_keys:
              - key: "123456789012345"
                secret: "asdf1JKL2xyz3ABc4s3c5reT01DfaKez"
                enabled: true
            created_at: "2016-09-27T08:00:16Z"
            updated_at: "2016-09-27T08:00:16Z"
          - cloud_name: "product2"
            name: "Product2 Application"
            enabled: true
            id: "0aaaaa1bbbbb2ccccc3ddddd4eeeee5f"
            api_access_keys:
              - key: "543210987654321"
                secret: "T415i5mYs3cr3TkeYN0tR3a77y0o0"
                enabled: true
            created_at: "2016-03-15T11:44:48Z"
            updated_at: "2016-03-15T11:44:48Z"

    MainAccessKey:
      summary: Access key sample value
      value:
        name: "main_key"
        api_key: "814814814814814"
        api_secret: "QcsQcsQcsQcsQcsQcsQcsQcsQcs"
        created_at: "2022-03-15T11:44:48Z"
        updated_at: "2023-08-10T09:23:45Z"
        enabled: true

    AccessKeys:
      summary: Get access keys sample response
      value:
        access_keys:
          - name: "main_key"
            api_key: "814814814814814"
            api_secret: "QcsQcsQcsQcsQcsQcsQcsQcsQcs"
            created_at: "2022-03-15T11:44:48Z"
            updated_at: "2023-08-10T09:23:45Z"
            enabled: true
          - name: "secondary_key"
            api_key: "418418418418418"
            api_secret: "scQscQscQscQscQscQscQscQscQ"
            created_at: "2023-09-10T09:23:45Z"
            updated_at: "2023-09-10T09:45:57Z"
            enabled: false
        total: 2

    UserJohn:
      summary: User details example
      value:
        id: "0abed8dfcc039ea05e2a1d494fd442"
        name: John
        role: technical_admin
        email: john@example.com
        pending: true
        enabled: true
        created_at: '2020-09-03T13:33:25Z'
        updated_at: '2020-09-03T13:33:25Z'
        all_sub_accounts: true
        groups:
          - id: "7f08f1f1fc910bf1f25274aef11d27"
            name: "user_group_1"
          - id: "1cc3808888154263ac1e5eb2e5c52d61"
            name: "user_group_2"

    UserFooBar:
      summary: User details example
      value:
        id: "7f08f1f1fc910bf1f25274aef11d27"
        name: foobar
        role: master_admin
        email: email@domain.com
        pending: true
        enabled: true
        created_at: '2019-09-12T11:53:57Z'
        updated_at: '2019-09-12T11:53:57Z'
        last_login: '2022-01-11T15:11:04Z'
        all_sub_accounts: false
        groups: [ ]
        sub_account_ids: "555asdf0000zxcvb3456qwerty"

    Users:
      summary: Get users sample response
      value:
        users:
          - id: 139147faa12ce11f22cfaffa84b307
            name: john_smith
            role: media_library_user
            email: john_smith@example.com
            pending: true
            enabled: true
            created_at: "2020-01-13T05:16:06Z"
            updated_at: "2020-01-13T05:16:06Z"
            last_login: "2022-01-11T15:11:04Z"
            all_sub_accounts: true
          - id: 28c84b2aa7924a5e64f949b5403981
            name: john_jones
            role: master_admin
            email: john_jones@example.com
            pending: true
            enabled: true
            created_at: "2019-01-13T05:16:05Z"
            updated_at: "2019-01-13T05:16:05Z"
            last_login: "2021-11-12T15:11:02Z"
            all_sub_accounts: true

    UserGroupDesigners:
      summary: User group example
      value:
        id: "7f08f1f1fc910bf1f25274aef11d27"
        name: "Designers"
     
    UserGroupDesignersExtendedDetails:
      summary: User group extended details example
      value:
        id: "7f08f1f1fc910bf1f25274aef11d27"
        name: "Designers"
        users:
          - id: "0abed8dfcc039ea05e2a1d494fd442"
            name: John Doe
            email: john.doe@example.com
          - id: "asdf1234uiopjkl7890wernmjlcaeg"
            name: Harry Potts
            email: harry.potts@example.com
        created_at: "2016-09-27T08:00:16Z"
        updated_at: "2016-09-27T08:00:16Z"

    UserGroupDesignersRequest:
      summary: User group update example
      value:
        name: "Designers and Creatives"
    UserGroupUpdate:
      summary: User group update example
      value:
        id: "7f08f1f1fc910bf1f25274aef11d27"
        name: "Designers and Creatives"
    UserGroups:
      summary: Get user groups example
      value:
        user_groups:
          - id: "7f08f1f1fc910bf1f25274aef11d27"
            name: "user_group_1"
          - id: "1cc3808888154263ac1e5eb2e5c52d61"
            name: "user_group_2"
    UserGroupsExtendedDetails:
      summary: Get user groups extended details example
      value:
        user_groups:
          - id: "7f08f1f1fc910bf1f25274aef11d27"
            name: "user_group_1"
            users:
              - id: "0abed8dfcc039ea05e2a1d494fd442"
                name: John Doe
                email: john.doe@example.com
              - id: "asdf1234uiopjkl7890wernmjlcaeg"
                name: Harry Potts
                email: harry.potts@example.com
            created_at: "2016-09-27T08:00:16Z"
            updated_at: "2016-09-27T08:00:16Z"
          - id: "1cc3808888154263ac1e5eb2e5c52d61"
            name: "user_group_2"
            users:
              - id: "asdl23uioejafmckowpuafdaghjajw"
                name: Beth Poppins
                email: beth.poppins@example.com
              - id: "iwejfjiwl83882kkswionvnnlxloow"
                name: Mike Smith
                email: mike.smith@example.com
            created_at: "2016-09-27T08:00:16Z"
            updated_at: "2016-09-27T08:00:16Z"
    UserGroupUserJohn:
      summary: User group user example
      value:
        id: "0abed8dfcc039ea05e2a1d494fd442"
        name: John Doe
        email: john.doe@example.com
    UserGroupUsers:
      summary: User group users example
      value:
        users:
          - id: "0abed8dfcc039ea05e2a1d494fd442"
            name: John
            email: john@example.com

    UserGroupUsersNoJohn:
      summary: User group users example
      value:
        users: [ ]

    # The following are all valid examples of BillingUsageResponse for different plans and scenarios.
    BillingUsageResponse_ProPAYG:
      summary: Get billing usage example for a Pro PAYG plan
      value:
        - plan_name: "Pro PAYG"
          metric_usage:
            - metric: "credit"
              limit: 2750
              cycles:
                - from_day: "2024-08-21"
                  to_day: "2024-09-20"
                  usage: 25641.55
                  breakdown:
                    storage_image: 7971.55
                    storage_video: 1575.58
                    storage_raw: 0
                    transformations_image: 9603.73
                    transformations_video: 2290.76
                    bandwidth_image: 2972.57
                    bandwidth_video: 1227.22
                    bandwidth_raw: 0.14
                  product_environment_breakdown:
                    - storage_image: 0.04
                      storage_video: 0.09
                      storage_raw: 0
                      transformations_image: 0
                      transformations_video: 0
                      bandwidth_image: 0
                      bandwidth_video: 0
                      bandwidth_raw: 0
                      cloud_name: "myproduct"
    BillingUsageResponse_AdvancedExtraPAYG:
      summary: Get billing usage example for an Advanced Extra PAYG + plan
      value:
        - plan_name: "Advanced Extra PAYG +"
          metric_usage:
            - metric: "credit"
              limit: 1350
              cycles:
                - from_day: "2025-02-05"
                  to_day: "2025-03-04"
                  usage: 2300
                  breakdown:
                    storage_image: 517.71
                    storage_video: 0.22
                    storage_raw: 0
                    transformations_image: 59.39
                    transformations_video: 0
                    video_seconds: 790.21
                    bandwidth_raw: 0
                    image_impressions: 932.46
                  product_environment_breakdown:
                    - storage_image: 0.04
                      storage_video: 0.11
                      storage_raw: 0
                      transformations_image: 0
                      transformations_video: 0
                      video_seconds: 0
                      bandwidth_raw: 0
                      image_impressions: 0
                      cloud_name: "myproduct1"
                    - storage_image: 517.67
                      storage_video: 0.11
                      storage_raw: 0
                      transformations_image: 59.39
                      transformations_video: 0
                      video_seconds: 790.21
                      bandwidth_raw: 0
                      image_impressions: 932.46
                      cloud_name: "myproduct2"
    BillingUsageResponse_AdvancedPAYG:
      summary: Get billing usage example for an Advanced PAYG plan
      value:
        - plan_name: "Advanced PAYG"
          metric_usage:
            - metric: "credit"
              limit: 600
              cycles:
                - from_day: "2024-08-26"
                  to_day: "2024-09-18"
                  usage: 1830.25
                  breakdown:
                    storage_image: 1.98
                    storage_video: 0.43
                    storage_raw: 0.01
                    transformations_image: 0.4
                    transformations_video: 0
                    bandwidth_image: 1827.43
                    bandwidth_video: 0
                    bandwidth_raw: 0
                  product_environment_breakdown:
                    - storage_image: 1.98
                      storage_video: 0.43
                      storage_raw: 0.01
                      transformations_image: 0.4
                      transformations_video: 0
                      bandwidth_image: 1827.43
                      bandwidth_video: 0
                      bandwidth_raw: 0
                      cloud_name: "myproduct"
    BillingUsageResponse_ProPAYGPlus:
      summary: Get billing usage example for a Pro PAYG + plan
      value:
        - plan_name: "Pro PAYG +"
          metric_usage:
            - metric: "credit"
              limit: 2750
              cycles:
                - from_day: "2025-01-14"
                  to_day: "2025-02-04"
                  usage: 1718.16
                  breakdown:
                    storage_image: 642.18
                    storage_video: 0.24
                    storage_raw: 0
                    transformations_image: 59.66
                    transformations_video: 0
                    video_seconds: 0.02
                    bandwidth_raw: 0
                    image_impressions: 1016.06
                  product_environment_breakdown:
                    - storage_image: 0.05
                      storage_video: 0.14
                      storage_raw: 0
                      transformations_image: 0
                      transformations_video: 0
                      video_seconds: 0
                      bandwidth_raw: 0
                      image_impressions: 0
                      cloud_name: "myproduct1"
                    - storage_image: 642.13
                      storage_video: 0.1
                      storage_raw: 0
                      transformations_image: 59.66
                      transformations_video: 0
                      video_seconds: 0.02
                      bandwidth_raw: 0
                      image_impressions: 1016.06
                      cloud_name: "myproduct2"
    BillingUsageResponse_MultiPlan:
      summary: Get billing usage example for multiple plans in a single response
      value:
        - plan_name: "Advanced PAYG"
          metric_usage:
            - metric: "credit"
              limit: 600
              cycles:
                - from_day: "2024-08-26"
                  to_day: "2024-09-18"
                  usage: 1830.25
                  breakdown:
                    storage_image: 1.98
                    storage_video: 0.43
                    storage_raw: 0.01
                    transformations_image: 0.4
                    transformations_video: 0
                    bandwidth_image: 1827.43
                    bandwidth_video: 0
                    bandwidth_raw: 0
                  product_environment_breakdown:
                    - storage_image: 1.98
                      storage_video: 0.43
                      storage_raw: 0.01
                      transformations_image: 0.4
                      transformations_video: 0
                      bandwidth_image: 1827.43
                      bandwidth_video: 0
                      bandwidth_raw: 0
                      cloud_name: "myproduct"
        - plan_name: "Advanced Extra PAYG"
          metric_usage:
            - metric: "credit"
              limit: 1350
              cycles:
                - from_day: "2024-09-19"
                  to_day: "2024-09-25"
                  usage: 1133.49
                  breakdown:
                    storage_image: 4.25
                    storage_video: 0.91
                    storage_raw: 0.02
                    transformations_image: 0.27
                    transformations_video: 0
                    bandwidth_image: 1128.03
                    bandwidth_video: 0
                    bandwidth_raw: 0
                  product_environment_breakdown:
                    - storage_image: 4.25
                      storage_video: 0.91
                      storage_raw: 0.02
                      transformations_image: 0.27
                      transformations_video: 0
                      bandwidth_image: 1128.03
                      bandwidth_video: 0
                      bandwidth_raw: 0
                      cloud_name: "myproduct"
